import argparse as ap
import json
import sys
import os
from etl.static_features import StaticFeatures
import uuid
from model import MalwareDetector
import subprocess

if __name__ == "__main__":
    # Add command Line Argument for data_path
    parser = ap.ArgumentParser(description="file")
    parser.add_argument("file", metavar="file", type=str,
                        help="File to predict")

    args = parser.parse_args()
    file = str(args.file)

    file_name = file.split("/")[-1]
    path = file.split('app/uploads')[0]

    hex_filename = uuid.uuid4().hex

    os.system("hexdump -v  -e '" + '"%08.8_ax  "' + "' -e' 4/1 " + '"%02x " " " 4/1 "%02x " " "  4/1 "%02x " " " 4/1 "%02x "  ' +
              "' -e '" + '"\n"' + "' " + file + " >" + path + "/data/bytes/" + hex_filename+".bytes")
    os.system("objdump -d " + file + " > " + path +
              "/data/asm/" + hex_filename+".asm")

    sf = StaticFeatures(path, file, file_name)
    sfv = sf.get_sf_vector()

    model = MalwareDetector()
    result = model.predict()

    resp = {
        "predict": 1
    }
    print(json.dumps(resp))
