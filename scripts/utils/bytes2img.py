import os
import argparse as ap
import numpy as np
from math import log
from PIL import Image
# func bytes2img() that convert the given "data_path" .exe to .png


def bytes2img(data_path):
    # read the data from the given path
    name = os.path.basename(data_path)
    with open(data_path, "rb") as f:
        array = []
        for line in f:
            xx = line.split()
            if len(xx) != 17:
                continue
            array.append([int(i, 16) if i != b'??' else 0 for i in xx[1:]])

        # convert the array to image
        array = np.array(array)
        if array.shape[1] != 16:  # If not hexadecimal
            assert(False)

        b = int((array.shape[0]*16)**(0.5))
        b = 2**(int(log(b)/log(2))+1)
        a = int(array.shape[0]*16/b)
        array = array[:a*b//16, :]
        array = np.reshape(array, (a, b))
        im = Image.fromarray(np.uint8(array))

        del array
        return im


if __name__ == "__main__":
    # Add command Line Argument for data_path
    parser = ap.ArgumentParser(description="Data Path for conversion")
    parser.add_argument("path", metavar="path", type=str,
                        help="Path to the Data")

    args = parser.parse_args()
    data_path = args.path

    isfile = os.path.isfile(data_path)
    if(isfile):
        print('creating')
        print(bytes2img(data_path))
